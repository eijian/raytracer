(* EBNF definition: Scene *)
(* cf. https://ja.wikipedia.org/wiki/EBNF *)

{

  world = { blankline } , light-spec-list ,
          { blankline } , material-list   ,
          { blankline } , surface-list    ,
          { blankline } , mapper-list     ,
          { blankline } , vertex-list     ,
          { blankline } , normal-vec-list ,
          { blankline } , object-list     ,
          { blankline } , scene           ,
          { blankline } ;


  light-spec-list = "light-spec" , separator , linefeed ,
                    light-spec , { { linefeed } , light-spec } ;

  light-spec = elem-name           ,
               color | temperature ,
               radiosity           ,
               directivity         ,
               direction           ;

  color       = indent2 , "color"       , separator , float3 , linefeed ;
  temperature = indent2 , "temperature" , separator , float  , linefeed ;
  lux         = indent2 , "radiosity"   , separator , float  , linefeed ;
  directivity = indent2 , "directivity" , separator , float  , linefeed ;
  dir-flag    = indent2 , "direction"   , separator , inout  , linefeed ;

  material-list = "material" , separator , linefeed ,
                  material , { { linefeed } , material } ;

  material = elem-name     ,
             albedo_diff   ,
             scatterness   ,
             metalness     ,
             transmittance ,
             ior           ,
             { ior_im }    ;

  albedo_diff   = indent2 , "albedo_diff"   , separator , float3 , linefeed ;
  scatterness   = indent2 , "scatterness"   , separator , float  , linefeed ;
  metalness     = indent2 , "metalness"     , separator , float  , linefeed ;
  transmittance = indent2 , "transmittance" , separator , float3 , linefeed ;
  ior           = indent2 , "ior"           , separator , float3 , linefeed ;
  ior_im        = indent2 , "ior_im"        , separator , float3 , linefeed ;

  surface-list = "surface" , separator , linefeed ,
                 surface , { { linefeed } , surface } ;

  surface = elem-name ,
            roughness ,
            { light } ;

  roughness = ident2 , "roughness" , separator , float , linefeed ;
  light     = ident2 , "light"     , separator , identifier , linefeed ;

  mapper-list = "mapper" , separator , linefeed ,
                mapper , { { linefeed } , mapper } ;

  mapper = elem-name ,
           mappertype | { { linefeed } , mappertype } ;

  mappertype = solid | checker

  solid = ident2 , "type" , separator , "solid" , linefeed ,
          ident2 , "map"  , separator , maptuple , linefeed ;

  checker = ident2 , "type" , separator , "checker" , linefeed ,
            ident2 , "map1" , separator , maptuple  , linefeed ,
            ident2 , "map2" , separator , maptuple  , linefeed ;

  maptuple = "[" , { space } , identifier , { space } , "," ,
                   { space } , identifier , { space } , "]" ;

  vertex-list = "vertex" , separator , linefeed ,
                vector-elem , { vector-elemx }  ;

  normal-vec-list = "normalvec" , separator , linefeed ,
                    vector-elem , { vector-elem }      ;

  vector-elem = ident2 , "-" , { space } , float3 , linefeed ;

  object-list = "object" , separator , linefeed ,
                object , { { linefeed } , object } ;

  object = elem-name ,
           shape     ,
           mapper-elem   ;

  shape = plain | sphere | polygon | parallelogram | mesh ;

  plain = ident2 , "type"     , separator , "plain" , linefeed ,
          ident2 , "normal"   , separator , float3  , linefeed ,
          ident2 , "position" , separator , float3  , linefeed ;

  sphere = ident2 , "type"   , separator , "sphere" , linefeed ,
           ident2 , "center" , separator , float3   , linefeed ,
           ident2 , "radius" , separator , float    , linefeed ;
  
  polygon = ident2 , "type" , separator , "polygon" , linefeed ,
            ident2 , "pos0" , separator , float3    , linefeed ,
            ident2 , "pos1" , separator , float3    , linefeed ,
            ident2 , "pos2" , separator , float3    , linefeed ;

  parallelogram = ident2 , "type" , separator , "parallelogram" , linefeed ,
                  ident2 , "pos0" , separator , float3          , linefeed ,
                  ident2 , "pos1" , separator , float3          , linefeed ,
                  ident2 , "pos2" , separator , float3          , linefeed ;

  mesh = ident2 , "type"    , separator , "mesh"   , linefeed ,
         ident2 , "polygon" , separator ,            linefeed ,
         polygon-elem , { polygon-elem }                      ;

  polygon-elem = ident2 , ident2 , "-" , { space } , "[" , { space } ,
                 vertex-info , { space } , "," ,
                 vertex-info , { space } , "," ,
                 vertex-info , { space } ,
                 "]" , linefeed ;
  
  vertex-info = "(" , { space } , posint , { space } , "," { space } , posint , { space } , ")" ;
 
  mapper-elem = ident2 , "mapper" , separator , identifier , linefeed ;

  scene = "scene" , separator , linefeed ,
          scene-elem , { scene-elem }    ;

  scene-elem = ident , "- " , identifier , linefeed ;

  elem-name = indent , identifier, separator , linefeed ;
  identifier = ( "_" } , letter , { "_" | "-" | letter | digit }
  indent2    = indent , indent ;
  indent     = '\0x20' , '\0x20' ;
  separator  = { space } , ":" , space ;

  inout  = "in" | "out" ;
  yesno  = "yes" | "no" ;
  filter = "none" | "cone" | "gauss" ;
  float3 = "[" , { space } , float , { space } , "," , { space } , float , {space} , "," , { space } , float , { space } , "]"
  float  = ( digit1 , { digit } ) | ( "-" , { digit } , digit) , [ "." , { digit } ] ;
  posint = digit , { digit } ;
  number = [ digit1 ] , { digit } , digit ;
  digit  = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
  digit1 = "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
  letter = "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" |
           "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" |
           "u" | "v" | "w" | "x" | "y" | "z" |
           "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" |
           "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" |
           "U" | "V" | "W" | "X" | "Y" | "Z" ;

  space = whitespace , { whitespace } ;
  whitespace = '\x20' | '\x09' ;
  linefeed = { whitespace } , '\x0a' | ( '\x0d' , '\x0a' ) ;

}
